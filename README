Fluent Operator container development environment
# fluent-operator-development

This repository provides a ready-to-use development environment for building and testing [fluent-operator](https://github.com/fluent/fluent-operator) within a containerized Kubernetes pod. All necessary development dependencies are included, allowing you to quickly spin up a Kubernetes cluster and start developing or testing the fluent-operator inside Kubernetes itself.

## Prerequisites

- Access to a Kubernetes cluster (e.g., Minikube, EKS, GKE, etc.)
- `kubectl` configured to access your cluster

## Getting Started

1. **Deploy the Development Pod**

   Apply the deployment manifest to your Kubernetes cluster:
   ```
   kubectl apply -f fluent-operator-deployment.yaml
   ```

2. **Access the Development Container**

   Find the pod name:

   ```sh
   kubectl get pods -l app=anson-fluent-operator-test
   ```

   Enter the main development container:

   ```sh
   kubectl exec -it <pod-name> -c fluent-operator-development -- /bin/bash
   ```

3. **Create a Kubernetes Cluster inside the Container**

   Once inside the container, run:

   ```sh
   kind create cluster
   ```

   This will launch a nested Kubernetes cluster using [kind](https://kind.sigs.k8s.io/).

4. **Develop or Test fluent-operator**

   Begin your fluent-operator development or testing inside this isolated environment. All necessary tools (Docker, kind, etc.) are pre-installed.

## Folder Structure

- `Dockerfile`: Defines the development environment image, including all dependencies.
- `fluent-operator-deployment.yaml`: Kubernetes manifest for deploying the development pod and Docker-in-Docker sidecar.

## Advanced

- The pod includes a Docker-in-Docker (dind) sidecar, enabling Docker commands within the development container.
- Shared volumes allow persistent workspace and Docker socket access.
- You can customize the Dockerfile to add additional tools or dependencies as required.

## Cleanup

To remove the development pod:

```sh
kubectl delete -f fluent-operator-deployment.yaml
```

## License

[MIT License](LICENSE) (update this section if your repo has a different license)

---

Let me know if you want to add more sections (e.g., contributing, FAQ, etc.) or make further adjustments!
